@model IEnumerable<Application.Dtos.OrderDtos.OrderDto>
<style>
    div.dataTables_wrapper div.dataTables_length {
        margin-top: -4%;
        float: right;
    }

    #requestOrderTable_wrapper .dataTables_info {
        margin-top: 2%;
        margin-bottom: 2%;
    }

    #requestOrderTable_wrapper .dataTables_paginate {
        margin-top: 2%;
        margin-bottom: 2%;
    }
</style>
@{
    ViewData["Title"] = "Deliveries";
}
<div class="col-md-12 col-lg-12">
    <h2 class="mt-4">Report of orders delivered by period</h2>

    <section>
        <nav class="navbar navbar-dark mb-3">
            <div class="container-fluid d-flex align-items-center">
                <form class="d-flex gap-3">
                    <div class="form-group">
                        <label for="minDate" class="me-2">Start date:</label>
                        <input type="date" class="form-control" name="minDate" value="@ViewData["minDate"]" />
                    </div>
                    <div class="form-group">
                        <label for="maxDate" class="me-2">End date:</label>
                        <input type="date" class="form-control" name="maxDate" value="@ViewData["maxDate"]" />
                    </div>
                    <div class="form-group mt-4">
                        <button type="submit" class="btn btn-dark">Filter</button>
                    </div>
                </form>
            </div>
        </nav>
        <table class="table table-striped table-hover" style="line-height:40px" id="requestOrderTable">
            <thead class="bg-dark">
                <tr class="text-white text-lg-center">
                    <th>Order Delivered</th>
                    <th>Name</th>
                    <th>Email</th>
                    <th>Phone</th>
                    <th>Total Order</th>
                    <th>Total Itens</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var item in Model)
                {
                    <tr class="text-lg-center">
                        <td>@Html.DisplayFor(modelItem => item.RequestReceived)</td>
                        <td>@Html.DisplayFor(modelItem => item.UserDelivery.FirstName)</td>
                        <td>@Html.DisplayFor(modelItem => item.UserDelivery.Email)</td>
                        <td>@Html.DisplayFor(modelItem => item.UserDelivery.Phone)</td>
                        <td>@(item.TotalOrder.ToString("C"))</td>
                        <td>@Html.DisplayFor(modelItem => item.TotalItemsOrder)</td>
                    </tr>
                }
            </tbody>
        </table>
    </section>
</div>
<hr style="margin-bottom:3%" />
<div class="panel-body">
    <div class="row">
        <div class="col-md-4">
            <div class="card text-white bg-success mb-3">
                <div class="card-body">
                    <h5 class="card-title">Total orders</h5>
                    <p class="card-text">@Model.Count()</p>
                </div>
            </div>
        </div>
        <div class="col-md-4">
            <div class="card text-white bg-info mb-3">
                <div class="card-body">
                    <h5 class="card-title">Total products</h5>
                    <p class="card-text">@Model.Sum(obj => obj.TotalItemsOrder)</p>
                </div>
            </div>
        </div>
        <div class="col-md-4">
            <div class="card text-white bg-warning mb-3">
                <div class="card-body">
                    <h5 class="card-title">Total amount</h5>
                    <p class="card-text">@Model.Sum(obj => obj.TotalOrder).ToString("C")</p>
                </div>
            </div>
        </div>
    </div>
    <div class="col-md-12">
        <div class="card">
            <div class="card-body">
                <canvas id="myChart" width="100" height="50"></canvas>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        $(document).ready(function () {
            $('#requestOrderTable').DataTable({
                "searching": false,
                "lengthMenu": [[5, 10, 15, -1], [5, 10, 15, "All"]],
                "pageLength": 5,
                "language": {
                    "info": "Showing  _START_ to _END_ of _TOTAL_ entries"
                }
            });
        });
    </script>
    <script>
        var modelData = {
            Count: @Model.Count(),
            TotalItemsOrder: @Model.Sum(obj => obj.TotalItemsOrder),
            TotalOrder: @Model.Sum(obj => obj.TotalOrder)
                                                };

        const chartData = {
            labels: ['Total Orders', 'Total Products', 'Total Amount'],
            datasets: [
                {
                    label: 'Total Orders',
                    data: [modelData.Count, 0, 0],
                    backgroundColor: 'rgb(40, 167, 69)',
                    borderColor: 'rgb(40, 167, 69)',
                    tension: 0.4,
                    fill: false,
                },
                {
                    label: 'Total Products',
                    data: [0, modelData.TotalItemsOrder, 0],
                    backgroundColor: 'rgb(54, 162, 235)',
                    borderColor: 'rgb(54, 162, 235)',
                    tension: 0.4,
                    fill: false,
                },
                {
                    label: 'Total Amount',
                    data: [0, 0, modelData.TotalOrder],
                    backgroundColor: 'rgb(255, 205, 86)',
                    borderColor: 'rgb(255, 205, 86)',
                    tension: 0.4,
                    fill: false,
                },
            ],
        };

        const myChart = new Chart(document.getElementById('myChart'), {
            type: 'line',
            data: chartData,
            options: {
                animations: {
                    radius: {
                        duration: 200,
                        easing: 'linear',
                        loop: (context) => context.active,
                    },
                },
                hoverRadius: 12,
                hoverBackgroundColor: 'yellow',
                interaction: {
                    mode: 'nearest',
                    intersect: false,
                    axis: 'x',
                },
                responsive: true,
                maintainAspectRatio: true,
                aspectRatio: 3.5,
                plugins: {
                    tooltip: {
                        enabled: true,
                    },
                    title: {
                        display: true,
                        text: 'Graphics'
                    },
                },
            },
        });

    </script>
}


