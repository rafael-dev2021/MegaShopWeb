@model IEnumerable<Application.Dtos.OrderDtos.OrderDto>

<div class="col-md-12 col-lg-12">

    <h2 class="mt-4">Report of orders sent by period</h2>

    <nav class="navbar navbar-dark">
        <div class="container-fluid d-flex align-items-center">
            <form class="d-flex gap-3">
                <div class="form-group">
                    <label for="minDate" class="me-2">Start date:</label>
                    <input type="date" class="form-control" name="minDate" value="@ViewData["minDate"]" />
                </div>
                <div class="form-group">
                    <label for="maxDate" class="me-2">End date:</label>
                    <input type="date" class="form-control" name="maxDate" value="@ViewData["maxDate"]" />
                </div>
                <div class="form-group mt-4">
                    <button type="submit" class="btn btn-success">Filter</button>
                </div>
            </form>
        </div>
    </nav>

    <div class="panel panel-primary mt-4">
        <div class="panel-body">
            <table class="table table-bordered table-hover mt-3">
                <thead>
                    <tr class="table-primary">
                        <th>Dispatched order</th>
                        <th>Name</th>
                        <th>Email</th>
                        <th>Phone</th>
                        <th>Total Order</th>
                        <th>Total Itens</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var item in Model)
                    {
                        <tr>
                            <td>@Html.DisplayFor(modelItem => item.DispatchedOrder)</td>
                            <td>@Html.DisplayFor(modelItem => item.UserDelivery.FirstName)</td>
                            <td>@Html.DisplayFor(modelItem => item.UserDelivery.Email)</td>
                            <td>@Html.DisplayFor(modelItem => item.UserDelivery.Phone)</td>
                            <td>$ @Html.DisplayFor(modelItem => item.TotalOrder)</td>
                            <td>@Html.DisplayFor(modelItem => item.TotalItemsOrder)</td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    </div>

    <div class="panel-body">
        <div class="row">
            <div class="col-md-4">
                <div class="card text-white bg-success mb-3">
                    <div class="card-body">
                        <h5 class="card-title">Total orders</h5>
                        <p class="card-text">@Model.Count()</p>
                    </div>
                </div>
            </div>
            <div class="col-md-4">
                <div class="card text-white bg-info mb-3">
                    <div class="card-body">
                        <h5 class="card-title">Total products</h5>
                        <p class="card-text">@Model.Sum(obj => obj.TotalItemsOrder).ToString()</p>
                    </div>
                </div>
            </div>
            <div class="col-md-4">
                <div class="card text-white bg-warning mb-3">
                    <div class="card-body">
                        <h5 class="card-title">Total amount</h5>
                        <p class="card-text">@Model.Sum(obj => obj.TotalOrder).ToString("c")</p>
                    </div>
                </div>
            </div>
        </div>
        <div class="col-md-12">
            <div class="card">
                <div class="card-body">
                    <canvas id="myChart" width="100" height="50"></canvas>
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        var ctx = document.getElementById('myChart').getContext('2d');

        var myChart = new Chart(ctx, {
            type: 'bar',
            data: {
                labels: [''],
                datasets: [
                    {
                        label: 'Total Orders',
                        data: [@Model.Count()],
                        backgroundColor: 'rgb(40, 167, 69)'
                    },
                    {
                        label: 'Total Products',
                        data: [@Model.Sum(obj => obj.TotalItemsOrder)],
                        backgroundColor: 'rgb(54, 162, 235)'
                    },
                    {
                        label: 'Total Amount',
                        data: [@Model.Sum(obj => obj.TotalOrder)],
                        backgroundColor: 'rgb(255, 205, 86)'
                    },
                ]
            },
            options: {
                responsive: true,
                maintainAspectRatio: true,
                aspectRatio: 3.5,
                plugins: {
                    legend: {
                        position: 'top',
                    },
                    title: {
                        display: true,
                        text: 'Graphics',
                    }
                } ,
            }
        });
    </script>
}

